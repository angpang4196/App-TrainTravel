<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="destination">
	<select id="findById" resultType="data.destination.Destination" parameterType="string">
		select * from destinations where Id = #{id}
	</select>
	<insert id="createDestination" parameterType="map">
		insert into destinations(ID,CONTENTTYPEID,AREACODE) values(#{id},#{contentTypeId},#{areaCode})
	</insert>
	<update id="updateViews" parameterType="string">
		update destinations set views = views + 1 where ID = #{contentId}
	</update>
	<update id="updateLikes" parameterType="string">
		update destinations set likes = likes + 1 where ID = #{contentId}
	</update>
	<select id="orderByViews" resultType="data.db.tour.DBTourList" parameterType="hashmap">
		select title,ID,TOURLIST.CONTENTTYPEID,TOURLIST.AREACODE,tourlist.firstimage,tourlist.addr1, TOURLIST.CONTENTID,
		NVL(likes, 0) as likes,coalesce(destinations.views,0) as views
		from tourlist left JOIN destinations on tourlist.contentid = destinations.id 
		where tourlist.contenttypeid=#{contentTypeId} and tourlist.areacode=#{areaCode} 
		order by views desc
	</select>
	<select id="orderByLikes" resultType="data.db.tour.DBTourList" parameterType="hashmap">
		select title,ID,TOURLIST.CONTENTTYPEID,TOURLIST.AREACODE,tourlist.firstimage,tourlist.addr1, TOURLIST.CONTENTID,
		NVL(likes, 0) as likes,coalesce(destinations.views,0) as views
		from tourlist left JOIN destinations on tourlist.contentid = destinations.id 
		where tourlist.contenttypeid=#{contentTypeId} and tourlist.areacode=#{areaCode} 
		order by likes desc
	</select>
</mapper>
